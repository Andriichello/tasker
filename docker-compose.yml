version: '3.8'

services:
  # PHP-FPM service for the backend
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tasker-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - tasker-network
    depends_on:
      - db

  # Nginx web server
  web:
    image: nginx:alpine
    container_name: tasker-web
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - tasker-network
    depends_on:
      - app

  # MySQL database
  db:
    image: mysql:8.0
    container_name: tasker-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-tasker}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USERNAME:-tasker}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - tasker-db-data:/var/lib/mysql
    ports:
      - "3366:3306"
    networks:
      - tasker-network

  # Node.js service for frontend builds
  node:
    image: node:20-alpine
    container_name: tasker-node
    restart: unless-stopped
    ports:
      - "8081:80"
    working_dir: /var/www
    volumes:
      - ./:/var/www
    command: sh -c "npm install && npm run build"
    networks:
      - tasker-network

networks:
  tasker-network:
    driver: bridge

volumes:
  tasker-db-data:
    driver: local
