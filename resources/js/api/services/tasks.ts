/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * tasker
 * OpenAPI spec version: 0.1
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import type {
  DestroyResponse,
  IndexTasksResponse,
  ShowTaskResponse,
  StoreTaskRequest,
  StoreTaskResponse,
  UpdateTaskRequest,
  UpdateTaskResponse,
} from "../models";

/**
 * @summary Index tasks.
 */
export const indexTasks = <TData = AxiosResponse<IndexTasksResponse>>(
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/tasks`, options);
};
/**
 * @summary Store a task.
 */
export const storeTask = <TData = AxiosResponse<StoreTaskResponse>>(
  storeTaskRequest: StoreTaskRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.post(`/api/tasks`, storeTaskRequest, options);
};
/**
 * @summary Show task by id.
 */
export const showTask = <TData = AxiosResponse<ShowTaskResponse>>(
  id: number,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.get(`/api/tasks/${id}`, options);
};
/**
 * @summary Delete task.
 */
export const destroyTask = <TData = AxiosResponse<DestroyResponse>>(
  id: number,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.delete(`/api/tasks/${id}`, options);
};
/**
 * @summary Update a task.
 */
export const updateTask = <TData = AxiosResponse<UpdateTaskResponse>>(
  id: number,
  updateTaskRequest: UpdateTaskRequest,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.patch(`/api/tasks/${id}`, updateTaskRequest, options);
};
export type IndexTasksResult = AxiosResponse<IndexTasksResponse>;
export type StoreTaskResult = AxiosResponse<StoreTaskResponse>;
export type ShowTaskResult = AxiosResponse<ShowTaskResponse>;
export type DestroyTaskResult = AxiosResponse<DestroyResponse>;
export type UpdateTaskResult = AxiosResponse<UpdateTaskResponse>;
